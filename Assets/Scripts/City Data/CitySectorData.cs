// @Nichita Cebotari
// *Explanatory Comments and Headers were written with help of AI*
// *General Review, Formatting, Optimization and Code Cleanup were done by AI*
//
// This script defines a data container for storing the geometric results of city sector generation.
//

using UnityEngine;
using System.Collections.Generic;
using MIConvexHull;

/// <summary>
/// A data container that holds all the geometric information generated for a single city sector.
/// This includes seed points, Voronoi diagrams, and the final processed building plots.
/// </summary>
public class CitySectorData
{
    /// <summary>
    /// The initial random points used to generate the Voronoi diagram.
    /// </summary>
    public List<Vector2> SeedPoints { get; set; } = new List<Vector2>();

    /// <summary>
    /// The raw, unprocessed polygonal cells generated by the Voronoi algorithm.
    /// These cells may be open or extend to infinity.
    /// </summary>
    public List<List<Vector2>> RawVoronoiCells { get; set; } = new List<List<Vector2>>();

    /// <summary>
    /// The final, processed building plots derived from the Voronoi cells.
    /// These are closed, valid polygons suitable for building generation.
    /// </summary>
    public List<List<Vector2>> ProcessedBuildingPlots { get; set; } = new List<List<Vector2>>();

    /// <summary>
    /// The Delaunay triangulation of the seed points, which is the dual graph of the Voronoi diagram.
    /// This can be useful for analyzing neighborhood relationships.
    /// </summary>
    public ITriangulation<DefaultVertex, DefaultTriangulationCell<DefaultVertex>> DelaunayTriangulation { get; set; }
}